# Build, test and push InvenTree docker image
# This workflow runs under any of the following conditions:
#
# - Push to the master branch
# - Publish release
#
# The following actions are performed:
#
# - Check that the version number matches the current branch or tag
# - Build the InvenTree docker image
# - Run suite of unit tests against the build image
# - Push the compiled, tested image to dockerhub

name: Docker

on:
  release:
    types: [published]
  push:
    branches:
      - 'master'

jobs:

  # Build the Docker image
  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # add Dockerhub username secret
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # add Dockerhub password secret
      docker_tags: latest
      python_version: 3.9
    steps:
      - name: Check out repo
        uses: actions/checkout@v2.4.2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.python_version }}
      - name: Version Check
        run: |
          pip install requests
          pip install pyyaml
          python3 ci/version_check.py
          echo "git_commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "git_commit_date=$(git show -s --format=%ci)" >> $GITHUB_ENV
      - name: Build Docker Image
        # Build the development Docker image (using docker-compose.yml)
        run: |
          docker-compose build --no-cache
      - name: Update Docker Image
        run: |
          docker-compose run inventree-dev-server invoke update
          docker-compose run inventree-dev-server invoke setup-dev
          docker-compose up -d
          docker-compose run inventree-dev-server pip install --upgrade setuptools
          docker-compose run inventree-dev-server invoke wait
      - name: Check Data Directory
        # The following file structure should have been created by the Docker image
        run: |
          test -d data
          test -d data/env
          test -d data/pgdb
          test -d data/media
          test -d data/static
          test -d data/plugins
          test -f data/config.yaml
          test -f data/plugins.txt
          test -f data/secret_key.txt
      - name: Run Unit Tests
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> docker.dev.env
          docker-compose run inventree-dev-server invoke test --disable-pty
          docker-compose down
      - name: Set up QEMU
        if: github.event_name != 'pull_request'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@v1
      - name: Set up cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v0.4.0
      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ghcr.io
  if: github.event_name != 'pull_request'
  uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2
  with:
    registry: ghcr.io
    username: ${{ github.actor }}
    password: ${{ secrets.GITHUB_TOKEN }}

- name: Extract Docker metadata
  if: github.event_name != 'pull_request'
  id: meta
  uses: docker/metadata-action@12cce9efe0d49980455aaaca9b071c0befcdd702 # pin@v4.1.0
  with:
    images: |
      inventree/inventree
      ghcr.io/inventree/inventree

- name: Build and Push
  id: build-and-push
  if: github.event_name != 'pull_request'
  uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # pin@v3.2.0
  with:
    context: .
    platforms: linux/amd64,linux/arm64,linux/arm/v7
    push: true
    target: production
    tags: ${{ env.docker_tags }}
    build-args: |
      commit_hash=${{ env.git_commit_hash }}
      commit_date=${{ env.git_commit_date }}

- name: Sign the published image
  if: false # github.event_name != 'pull_request'
  env:
    COSIGN_EXPERIMENTAL: "true"
  run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
